{"ast":null,"code":"var _jsxFileName = \"/Users/danielmendes/Documents/happypet/src/components/Modal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport FocusLock from \"react-focus-lock\";\nimport { Container, Backdrop } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Modal = ({\n  isShown,\n  hide,\n  modalContent,\n  headerText\n}) => {\n  _s();\n\n  const onKeyDown = event => {\n    if (event.keyCode === 27 && isShown) {\n      hide();\n    }\n  };\n\n  useEffect(() => {\n    isShown ? document.body.style.overflow = \"hidden\" : document.body.style.overflow = \"unset\";\n    document.addEventListener(\"keydown\", onKeyDown, false);\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown, false);\n    };\n  }, [isShown]);\n\n  const modal = /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      onClick: hide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FocusLock, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hide,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: modalContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n\n  return isShown ? /*#__PURE__*/ReactDOM.createPortal(modal, document.body) : null;\n};\n\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/components/Modal/index.tsx"],"names":["React","useEffect","ReactDOM","FocusLock","Container","Backdrop","Modal","isShown","hide","modalContent","headerText","onKeyDown","event","keyCode","document","body","style","overflow","addEventListener","removeEventListener","modal","createPortal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAIC,SAASC,SAAT,EAAoBC,QAApB,QAAoC,UAApC;;AASD,OAAO,MAAMC,KAA2B,GAAG,CAAC;AACxCC,EAAAA,OADwC;AAExCC,EAAAA,IAFwC;AAGxCC,EAAAA,YAHwC;AAIxCC,EAAAA;AAJwC,CAAD,KAKnC;AAAA;;AAEJ,QAAMC,SAAS,GAAIC,KAAD,IAA0B;AACxC,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBN,OAA5B,EAAqC;AACnCC,MAAAA,IAAI;AACL;AACF,GAJH;;AAMEP,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,GACFO,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAD7B,GAEFH,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,OAFpC;AAGAH,IAAAA,QAAQ,CAACI,gBAAT,CAA0B,SAA1B,EAAqCP,SAArC,EAAgD,KAAhD;AACA,WAAO,MAAM;AACXG,MAAAA,QAAQ,CAACK,mBAAT,CAA6B,SAA7B,EAAwCR,SAAxC,EAAmD,KAAnD;AACD,KAFD;AAGD,GARQ,EAQN,CAACJ,OAAD,CARM,CAAT;;AAUF,QAAMa,KAAK,gBACP,QAAC,SAAD;AAAA,4BACA,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEZ;AAAnB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAYF,SAAOF,OAAO,gBAAGL,QAAQ,CAACmB,YAAT,CAAsBD,KAAtB,EAA6BN,QAAQ,CAACC,IAAtC,CAAH,GAAgD,IAA9D;AACD,CApCM;;GAAMT,K;;KAAAA,K","sourcesContent":["import React, {useEffect} from 'react';\nimport Button from '../Button';\nimport ReactDOM from \"react-dom\";\nimport FocusLock from \"react-focus-lock\";\n\n\n\n import { Container, Backdrop } from './styles';\n\nexport interface ModalProps {\n    isShown: boolean;\n    hide: () => void;\n    modalContent: JSX.Element;\n    headerText: string;\n  }\n\nexport const Modal: React.FC<ModalProps> = ({\n    isShown,\n    hide,\n    modalContent,\n    headerText\n  }) => {\n\n    const onKeyDown = (event: KeyboardEvent) => {\n        if (event.keyCode === 27 && isShown) {\n          hide();\n        }\n      };\n    \n      useEffect(() => {\n        isShown\n          ? (document.body.style.overflow = \"hidden\")\n          : (document.body.style.overflow = \"unset\");\n        document.addEventListener(\"keydown\", onKeyDown, false);\n        return () => {\n          document.removeEventListener(\"keydown\", onKeyDown, false);\n        };\n      }, [isShown]);\n\n    const modal = (\n        <Container>\n        <Backdrop onClick={hide} />\n        <FocusLock>\n        <p></p>\n        <button onClick={hide}>X</button>\n        <p>{modalContent}</p>\n        </FocusLock>\n        </Container>\n\n    );\n\n  return isShown ? ReactDOM.createPortal(modal, document.body): null;\n}\n\n"]},"metadata":{},"sourceType":"module"}