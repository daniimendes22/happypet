{"ast":null,"code":"export const login = (username, password) => {\n  // Get a token from api server using the fetch api\n  return fetch(`http://localhost:8080/api/auth/login`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(res => {\n    setToken(res.token); // Setting the token in localStorage\n\n    return Promise.resolve(res);\n  });\n};\nexport const getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nexport const getToken = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n};","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/services/auth.tsx"],"names":["login","username","password","fetch","method","body","JSON","stringify","then","res","setToken","token","Promise","resolve","getCurrentUser","parse","localStorage","getItem","getToken","logout","removeItem"],"mappings":"AAGA,OAAO,MAAMA,KAAK,GAAG,CAACC,QAAD,EAAkBC,QAAlB,KAAsC;AACvD;AACA,SAAOC,KAAK,CAAE,sCAAF,EAAyC;AACnDC,IAAAA,MAAM,EAAE,MAD2C;AAEnDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,QADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAF6C,GAAzC,CAAL,CAMJM,IANI,CAMCC,GAAG,IAAI;AACbC,IAAAA,QAAQ,CAACD,GAAG,CAACE,KAAL,CAAR,CADa,CACQ;;AACrB,WAAOC,OAAO,CAACC,OAAR,CAAgBJ,GAAhB,CAAP;AACD,GATM,CAAP;AAUD,CAZI;AAcP,OAAO,MAAMK,cAAc,GAAE,MAAK;AAC9B,SAAOR,IAAI,CAACS,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,SAAOZ,IAAI,CAACS,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,MAAM,GAAG,MAAK;AACvBH,EAAAA,YAAY,CAACI,UAAb,CAAwB,MAAxB;AACH,CAFM","sourcesContent":["import decode from 'jwt-decode';\n\n  \nexport const login = (username:string, password:string) => {\n    // Get a token from api server using the fetch api\n    return fetch(`http://localhost:8080/api/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    }).then(res => {\n      setToken(res.token); // Setting the token in localStorage\n      return Promise.resolve(res);\n    });\n  }\n\nexport const getCurrentUser =() =>{\n    return JSON.parse(localStorage.getItem(\"user\")!);\n};\n\nexport const getToken = () => {\n    return JSON.parse(localStorage.getItem('user')!);\n}\n\nexport const logout = () =>{\n    localStorage.removeItem(\"user\");\n};\n\n"]},"metadata":{},"sourceType":"module"}