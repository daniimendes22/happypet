{"ast":null,"code":"var _jsxFileName = \"/Users/danielmendes/Documents/happypet/src/pages/Login/index.tsx\";\nimport React from \"react\";\nimport Banner from \"../../components/Banner\";\nimport Header from \"../../components/Header\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Container, FormItem, Image, Input, Form, Button } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormItem, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/letter.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Email\",\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/lock.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Password\",\n            type: \"password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isSubmitting || !!(errors.email && touched.email) || !!(errors.password && touched.password),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst Login = withFormik({\n  mapPropsToValues: props => ({\n    email: props.initialEmail || \"\",\n    password: props.initialPassword || \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email(\"Email not valid\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  }),\n\n  handleSubmit({\n    email,\n    password\n  }, {\n    props,\n    setSubmitting,\n    setErrors\n  }) {\n    setTimeout(() => {\n      alert(email + \"\" * password);\n      setSubmitting(false);\n    }, 500);\n  }\n\n})(LoginForm);\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/pages/Login/index.tsx"],"names":["React","Banner","Header","withFormik","Yup","Container","FormItem","Image","Input","Form","Button","LoginForm","props","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","email","password","Login","mapPropsToValues","initialEmail","initialPassword","validationSchema","object","shape","string","required","setSubmitting","setErrors","setTimeout","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Banner from \"../../components/Banner\";\nimport Header from \"../../components/Header\";\n\nimport { withFormik, FormikProps } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Container, FormItem, Image, Input, Form, Button } from \"./styles\";\n\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\ninterface MyFormProps {\n  initialEmail?: string;\n  initialPassword?: string;\n}\n\nconst LoginForm = (props: FormikProps<FormValues>) => {\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n  } = props;\n\n  return (\n    <div>\n      <Header></Header>\n      <Banner></Banner>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <FormItem>\n            <Image src=\"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/letter.svg\" />\n            <Input\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n          </FormItem>\n\n          <FormItem>\n            <Image src=\"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/lock.svg\" />\n            <Input\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n          </FormItem>\n\n          <Button\n            type=\"submit\"\n            disabled={\n              isSubmitting ||\n              !!(errors.email && touched.email) ||\n              !!(errors.password && touched.password)\n            }\n          >\n            Sign In\n          </Button>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nconst Login = withFormik<MyFormProps, FormValues>({\n  mapPropsToValues: (props) => ({\n    email: props.initialEmail || \"\",\n    password: props.initialPassword || \"\",\n  }),\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email(\"Email not valid\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  }),\n\n  handleSubmit(\n    { email, password }: FormValues,\n    { props, setSubmitting, setErrors }\n  ) {\n    setTimeout(() => {\n        alert(email +\"\"* password);\n        setSubmitting(false);\n      }, 500);\n\n  },\n})(LoginForm);\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}