{"ast":null,"code":"var _jsxFileName = \"/Users/danielmendes/Documents/happypet/src/pages/CreatePet/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, ErrorMessage, Wrapper } from './styles';\nimport { Input } from \"../../components/Input\";\nimport Header from '../../components/Header';\nimport Button from '../../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n//import { Redirect } from 'react-router-dom';\nconst CreatePet = () => {\n  _s();\n\n  const initialPetState = {\n    name: \"\",\n    specie: \"\",\n    age: \"\",\n    gender: \"\",\n    image: \"\",\n    description: \"\"\n  };\n  const [pet, setPet] = useState(initialPetState); //const [redirect, setRedirect] = useState(false);\n\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPet({ ...pet,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setLoading(true);\n    const data = {\n      name: pet.name,\n      specie: pet.specie,\n      age: pet.age,\n      gender: pet.gender,\n      image: pet.image,\n      description: pet.description\n    };\n    const user = JSON.parse(localStorage.getItem('user'));\n    fetch(\"http://localhost:8080/api/pets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${user.token}`\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(response => {}).catch(e => {\n      const errMessage = e.response && e.response && e.response.message || e.message || e.toString();\n      setLoading(false);\n      setMessage(errMessage);\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"name\",\n            noMargin: false,\n            value: pet.name,\n            onChange: handleInputChange,\n            label: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"specie\",\n            noMargin: false,\n            value: pet.specie,\n            onChange: handleInputChange,\n            label: \"Specie\",\n            placeholder: \"( CAT | DOG | BIRD | FARM | HORSE | FISH )\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"age\",\n            noMargin: false,\n            value: pet.age,\n            onChange: handleInputChange,\n            label: \"Age\",\n            placeholder: \"( BABY | YOUNG | ADULT | SENIOR )\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"gender\",\n            value: pet.gender,\n            noMargin: false,\n            onChange: handleInputChange,\n            label: \"Gender\",\n            placeholder: \"( MALE | FEMALE )\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"image\",\n            value: pet.image,\n            noMargin: false,\n            onChange: handleInputChange,\n            label: \"Link of Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"description\",\n            value: pet.description,\n            noMargin: false,\n            onChange: handleInputChange,\n            label: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 14\n          }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            width: \"100%\",\n            type: \"submit\",\n            disabled: loading,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreatePet, \"TRUCOXru4pFzQNnokM6vMd/+IKM=\");\n\n_c = CreatePet;\nexport default CreatePet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePet\");","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/pages/CreatePet/index.tsx"],"names":["React","useState","Container","ErrorMessage","Wrapper","Input","Header","Button","CreatePet","initialPetState","name","specie","age","gender","image","description","pet","setPet","loading","setLoading","message","setMessage","handleInputChange","e","value","target","handleSubmit","preventDefault","data","user","JSON","parse","localStorage","getItem","fetch","method","headers","token","body","stringify","then","response","json","catch","errMessage","toString","console","log"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent, useState } from 'react';\n\n import { Container, ErrorMessage, Wrapper } from './styles';\n import {Input} from \"../../components/Input\"\nimport Header from '../../components/Header';\nimport Button from '../../components/Button';\nimport { ChangeEvent } from 'react';\n//import { Redirect } from 'react-router-dom';\n\nconst CreatePet: React.FC = () => {\n\n  interface Pet {\n    name: string;\n    specie: string;\n    age: string;\n    gender:string;\n    image: string;\n    description:string;\n  }\n  const initialPetState = {\n    name: \"\",\n    specie: \"\",\n    age: \"\",\n    gender:\"\",\n    image: \"\",\n    description:\"\"\n  }\n  const [pet, setPet] = useState<Pet>(initialPetState);\n  //const [redirect, setRedirect] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setPet({ ...pet, [name]: value });\n  };\n\n  const handleSubmit = async (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    setMessage('');\n    setLoading(true);\n\n    const data  = {\n      name: pet.name,\n    specie: pet.specie,\n    age: pet.age,\n    gender: pet.gender,\n    image: pet.image,\n    description: pet.description\n  };\n\n  const user = JSON.parse(localStorage.getItem('user')!);\n\n  fetch(\"http://localhost:8080/api/pets\", {\n    method: \"POST\",\n    headers: { \n      \"Content-Type\": \"application/json\",\n      'Authorization': `Bearer ${user.token}`\n    },\n    body: JSON.stringify(data)\n  })\n  .then(response => response.json())\n  .then(response => {\n  })\n  .catch(e => {\n    const errMessage = (e.response && e.response && e.response.message) || e.message || e.toString();\n    setLoading(false);\n    setMessage(errMessage);\n    console.log(e);\n  })\n  }\n\n\n\n  return (\n    <>\n    <Header></Header>\n    <Wrapper> \n      <Container>\n          <form onSubmit={handleSubmit}>    \n          <Input\n                name=\"name\"\n                noMargin={false}\n                value={pet.name}\n                onChange={handleInputChange}\n                label=\"Name\"\n            />\n             <Input\n             name=\"specie\"\n                noMargin={false}\n                value={pet.specie}\n                onChange={handleInputChange}\n                label=\"Specie\"\n                placeholder=\"( CAT | DOG | BIRD | FARM | HORSE | FISH )\"\n            />\n             <Input\n               name=\"age\"\n                noMargin={false}\n                value={pet.age}\n                onChange={handleInputChange}\n                label=\"Age\"\n                placeholder=\"( BABY | YOUNG | ADULT | SENIOR )\"\n                \n            />\n             <Input\n             name=\"gender\"\n             value={pet.gender}\n                noMargin={false}\n                onChange={handleInputChange}\n                label=\"Gender\"\n                placeholder=\"( MALE | FEMALE )\"\n\n            />\n             <Input\n             name=\"image\"\n             value={pet.image}\n                noMargin={false}\n                onChange={handleInputChange}\n                label=\"Link of Image\"\n            />\n             <Input\n             name=\"description\"\n             value={pet.description}\n                noMargin={false}\n                onChange={handleInputChange}\n                label=\"Description\"\n            />\n             {message && (\n          <ErrorMessage>{message}</ErrorMessage>\n          )}\n            <Button \n            width=\"100%\"\n            type=\"submit\"\n            disabled={ loading }\n             >\n            Sign In\n          </Button>\n          </form>\n          </Container>\n      </Wrapper>\n      </>\n      \n  );\n}\n\nexport default CreatePet;"]},"metadata":{},"sourceType":"module"}