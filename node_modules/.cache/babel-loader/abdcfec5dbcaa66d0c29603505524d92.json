{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport const useModal = () => {\n  _s();\n\n  const [isShown, setIsShown] = useState(false);\n\n  const toggle = () => setIsShown(!isShown);\n\n  return {\n    isShown,\n    toggle\n  };\n};\n\n_s(useModal, \"AfL4AMulNN2iutG1qDR77gnp7oc=\");","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/hooks/useModal.tsx"],"names":["useState","useModal","isShown","setIsShown","toggle"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAU,KAAV,CAAtC;;AACA,QAAMI,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AACA,SAAO;AACNA,IAAAA,OADM;AAENE,IAAAA;AAFM,GAAP;AAIA,CAPM;;GAAMH,Q","sourcesContent":["import { useState } from 'react';\n\nexport const useModal = () => {\n\tconst [isShown, setIsShown] = useState<boolean>(false);\n\tconst toggle = () => setIsShown(!isShown);\n\treturn {\n\t\tisShown,\n\t\ttoggle,\n\t};\n};"]},"metadata":{},"sourceType":"module"}