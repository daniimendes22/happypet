{"ast":null,"code":"import decode from \"jwt-decode\";\nexport const login = (username, password) => {\n  // Get a token from api server using the fetch api\n  return fetch(`http://localhost:8080/api/auth/login`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(response => response.json()).then(response => {\n    setToken(response.token); // Setting the token in localStorage\n\n    return Promise.resolve(response);\n  });\n};\n\nconst setToken = idToken => {\n  // Saves user token to localStorage\n  localStorage.setItem(\"user\", idToken);\n};\n\nexport const getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nexport const getToken = () => {\n  const token = JSON.parse(localStorage.getItem(\"user\"));\n  return token.token;\n};\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n};\nexport const getProfile = () => {\n  return decode(getToken());\n};","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/services/auth.tsx"],"names":["decode","login","username","password","fetch","method","body","JSON","stringify","then","response","json","setToken","token","Promise","resolve","idToken","localStorage","setItem","getCurrentUser","parse","getItem","getToken","logout","removeItem","getProfile"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,YAAnB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAmBC,QAAnB,KAAwC;AAC3D;AACA,SAAOC,KAAK,CAAE,sCAAF,EAAyC;AACnDC,IAAAA,MAAM,EAAE,MAD2C;AAEnDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,QADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAF6C,GAAzC,CAAL,CAOJM,IAPI,CAOEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPf,EAQJF,IARI,CAQEC,QAAD,IAAc;AAClBE,IAAAA,QAAQ,CAACF,QAAQ,CAACG,KAAV,CAAR,CADkB,CACQ;;AAC1B,WAAOC,OAAO,CAACC,OAAR,CAAgBL,QAAhB,CAAP;AACD,GAXI,CAAP;AAYD,CAdM;;AAgBP,MAAME,QAAQ,GAAII,OAAD,IAAqB;AACpC;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,OAA7B;AACD,CAHD;;AAKA,OAAO,MAAMG,cAAc,GAAG,MAAM;AAClC,SAAOZ,IAAI,CAACa,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMT,KAAK,GAAGN,IAAI,CAACa,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,CAAd;AACA,SAAOR,KAAK,CAACA,KAAb;AACD,CAHM;AAKP,OAAO,MAAMU,MAAM,GAAG,MAAM;AAC1BN,EAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOzB,MAAM,CAACsB,QAAQ,EAAT,CAAb;AACD,CAFM","sourcesContent":["import decode from \"jwt-decode\";\n\nexport const login = (username: string, password: string) => {\n  // Get a token from api server using the fetch api\n  return fetch(`http://localhost:8080/api/auth/login`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      setToken(response.token); // Setting the token in localStorage\n      return Promise.resolve(response);\n    });\n};\n\nconst setToken = (idToken: string) => {\n  // Saves user token to localStorage\n  localStorage.setItem(\"user\", idToken);\n};\n\nexport const getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\")!);\n};\n\nexport const getToken = () => {\n  const token = JSON.parse(localStorage.getItem(\"user\")!);\n  return token.token;\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport const getProfile = () => {\n  return decode(getToken());\n};\n"]},"metadata":{},"sourceType":"module"}