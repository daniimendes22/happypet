{"ast":null,"code":"var _jsxFileName = \"/Users/danielmendes/Documents/happypet/src/pages/Login/index.tsx\";\nimport React from \"react\";\nimport Banner from \"../../components/Banner\";\nimport Header from \"../../components/Header\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Container, FormItem } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/letter.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/lock.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting || !!(errors.email && touched.email) || !!(errors.password && touched.password),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginForm;\nconst Login = withFormik({\n  mapPropsToValues: props => ({\n    email: props.initialEmail || \"\",\n    password: props.initialPassword || \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email(\"Email not valid\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  }),\n\n  handleSubmit({\n    email,\n    password\n  }, {\n    props,\n    setSubmitting,\n    setErrors\n  }) {\n    console.log(email, password);\n  }\n\n})(LoginForm);\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/pages/Login/index.tsx"],"names":["React","Banner","Header","withFormik","Yup","Container","FormItem","LoginForm","props","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","email","password","Login","mapPropsToValues","initialEmail","initialPassword","validationSchema","object","shape","string","required","setSubmitting","setErrors","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Banner from \"../../components/Banner\";\nimport Header from \"../../components/Header\";\n\nimport { withFormik, FormikProps } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport {Container, FormItem} from \"./styles\"\n\n\ninterface FormValues {\n    email: string;\n    password: string;\n}\n\ninterface MyFormProps {\n    initialEmail?: string;\n    initialPassword?: string;\n}\n\nconst LoginForm = (props: FormikProps<FormValues>) => {\n    const {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n    } = props;\n\n\n  return (\n    <div>\n      <Header></Header>\n      <Banner></Banner>\n      <Container>\n      <form onSubmit={handleSubmit}>\n                <FormItem>\n                     <img src=\"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/letter.svg\" />\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n                    />\n                </FormItem>\n\n                <FormItem>\n                <Image src=\"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/lock.svg\" />\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                    />\n                </FormItem>\n\n                <button\n                    type=\"submit\"\n                    disabled={\n                        isSubmitting ||\n                        !!(errors.email && touched.email) ||\n                        !!(errors.password && touched.password)\n                    }\n                >\n                    Sign In\n                </button>\n            </form>\n      </Container>\n    </div>\n  );\n};\n\nconst Login = withFormik<MyFormProps, FormValues>({\n    mapPropsToValues: props => ({\n        email: props.initialEmail || \"\",\n        password: props.initialPassword || \"\"\n    }),\n\n    validationSchema: Yup.object().shape({\n        email: Yup.string()\n            .email(\"Email not valid\")\n            .required(\"Email is required\"),\n        password: Yup.string().required(\"Password is required\")\n    }),\n\n    handleSubmit(\n        { email, password }: FormValues,\n        { props, setSubmitting, setErrors }\n    ) {\n        console.log(email, password);\n    }\n})(LoginForm);\n\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}