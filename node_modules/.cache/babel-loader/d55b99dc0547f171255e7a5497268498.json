{"ast":null,"code":"var _jsxFileName = \"/Users/danielmendes/Documents/happypet/src/pages/Login/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Banner from \"../../components/Banner\";\nimport Header from \"../../components/Header\";\nimport { Container, FormItem, Image, Input, Form, Button } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = () => {\n    const BaseUrl = 'http://127.0.0.1:8000/api/token/';\n    fetch(BaseUrl, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.LogInData.email,\n        password: this.LogInData.password\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(\" data of response\", res.detail);\n      this.setState({\n        detail: res.detail\n      });\n      localStorage.setItem('access_token', res.access);\n      localStorage.setItem('refresh_token', res.refresh); // // this.SuccessNotification();\n      // this.openNotificationWithIcon('success');\n      // this.setState({ success: true });\n\n      if (!this.state.detail) {\n        this.openNotificationWithIcon('success');\n        this.setState({\n          success: true\n        });\n      } else {\n        this.setState({\n          BtnRef: false\n        });\n        this.openNotificationWithIconn(this.state.detail);\n      }\n    }, error => {\n      this.setState({\n        BtnRef: false\n      });\n      this.openNotificationWithIconn('failed');\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormItem, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/letter.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Email\",\n            type: \"email\",\n            name: \"email\",\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormItem, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/lock.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Password\",\n            type: \"password\",\n            name: \"password\",\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/danielmendes/Documents/happypet/src/pages/Login/index.tsx"],"names":["React","useState","Banner","Header","Container","FormItem","Image","Input","Form","Button","Login","email","setEmail","password","setPassword","handleSubmit","BaseUrl","fetch","method","headers","body","JSON","stringify","LogInData","then","res","json","console","log","detail","setState","localStorage","setItem","access","refresh","state","openNotificationWithIcon","success","BtnRef","openNotificationWithIconn","error"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Banner from \"../../components/Banner\";\nimport Header from \"../../components/Header\";\n\n\nimport { Container, FormItem, Image, Input, Form, Button } from \"./styles\";\n\n\n\n\n\nconst Login: React.FC = () => {\n\n    const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = () => {\n    const BaseUrl = 'http://127.0.0.1:8000/api/token/'\n    fetch(BaseUrl, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            email: this.LogInData.email,\n            password: this.LogInData.password\n        })\n\n    })\n        .then(res => res.json())\n        .then((res) => {\n            console.log(\" data of response\", res.detail);\n            this.setState({ detail: res.detail });\n            localStorage.setItem('access_token', res.access);\n            localStorage.setItem('refresh_token', res.refresh);\n\n\n            // // this.SuccessNotification();\n            // this.openNotificationWithIcon('success');\n            // this.setState({ success: true });\n            if (!this.state.detail) {\n                this.openNotificationWithIcon('success');\n                this.setState({ success: true });\n            }\n            else {\n                this.setState({ BtnRef: false });\n                this.openNotificationWithIconn(this.state.detail)\n\n            }\n\n        },\n            (error) => {\n                this.setState({ BtnRef: false });\n                this.openNotificationWithIconn('failed');\n\n\n                console.log(error);\n            })\n\n  }\n  return (\n      <>\n      <Header />\n      <Banner />\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <FormItem>\n            <Image src=\"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/letter.svg\" />\n            <Input\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n            />\n          </FormItem>\n\n          <FormItem>\n            <Image src=\"https://res.cloudinary.com/glovoapp/image/fetch///https://glovoapp.com/images/glyphs/lock.svg\" />\n            <Input\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n            />\n          </FormItem>\n\n          <Button\n            type=\"submit\"\n           \n            \n          >\n            Sign In\n          </Button>\n        </Form>\n      </Container>\n\n      </>\n  );\n}\n\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}